name: Pull Request Preview Artifact

on:
  pull_request:
    branches:
      - master

jobs:
  build-preview:
    if: startsWith(github.head_ref, 'feature/') || startsWith(github.head_ref, 'bugfix/') || startsWith(github.head_ref, 'release/')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get current version
        id: get_version
        run: |
          CURRENT_TAG=$(git describe --tags --abbrev=0 || echo "0.0.0")
          echo "current=$CURRENT_TAG" >> $GITHUB_OUTPUT

      - name: Determine new version
        id: version
        run: |
          CURRENT=${{ steps.get_version.outputs.current }}
          MAJOR=$(echo "$CURRENT" | cut -d. -f1)
          MINOR=$(echo "$CURRENT" | cut -d. -f2)
          PATCH=$(echo "$CURRENT" | cut -d. -f3)

          BRANCH_NAME="${{ github.head_ref }}"

          if [[ "$BRANCH_NAME" == release/* ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ "$BRANCH_NAME" == feature/* ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [[ "$BRANCH_NAME" == bugfix/* ]]; then
            PATCH=$((PATCH + 1))
          else
            echo "Unsupported branch type"
            exit 1
          fi

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          TIMESTAMP=$(date +"%Y%m%d%H%M%S")
          SUFFIX="preview-${NEW_VERSION}-${TIMESTAMP}"

          echo "suffix=$SUFFIX" >> $GITHUB_OUTPUT

      - name: Read .compact-ignore and zip files with proper name
        run: |
          if [ ! -f .compact-ignore ]; then
            echo ".compact-ignore not found, creating an empty one."
            touch .compact-ignore
          fi
          zip -r "${{ steps.version.outputs.suffix }}.zip" . -x@.compact-ignore -x "${{ steps.version.outputs.suffix }}.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.version.outputs.suffix }}
          path: ${{ steps.version.outputs.suffix }}.zip
